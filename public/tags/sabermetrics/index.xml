<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sabermetrics on Walker Harrison</title>
    <link>/tags/sabermetrics/</link>
    <description>Recent content in Sabermetrics on Walker Harrison</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/sabermetrics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>colorizing Baseball Reference by percentile</title>
      <link>/posts/colorizing-baseball-reference-by-percentile/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/colorizing-baseball-reference-by-percentile/</guid>
      <description>One of the reasons the wider baseball community is sometimes slow to adopt different methodologies is that new metrics require memorizing new context. Anybody that’s picked up a baseball card in the last century can tell you that a power hitter should slug 30 home runs, but what qualifies as an excellent strikeout-to-walk ratio?
One solution is to normalize a new statistic onto an existing one so that it inherits a similar distribution: stats like wOBA and FIP are scaled onto OBP and ERA, respectively, so that people can have a better idea of what constitutes success.</description>
    </item>
    
    <item>
      <title>wOBA and wRC&#43;</title>
      <link>/posts/wobawrc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/wobawrc/</guid>
      <description>RETROSHEET PRIMER
The first step, naturally, is to read in some data. If you’ve used retrosheet event files before, the get_plays function will check if the right .csv file already exists, and use the aforementioned parse.retrosheet2.pbp function if it doesn’t. Once the column names are attached, we have our raw play-by-play data for a single season.
library(tidyverse) library(gridExtra) library(knitr) source(&amp;quot;parse.retrosheet.pbp.R&amp;quot;) get_plays &amp;lt;- function(season){ season.path &amp;lt;- paste0(&amp;#39;download.folder/unzipped/all&amp;#39;, season, &amp;#39;.csv&amp;#39;) if (!</description>
    </item>
    
  </channel>
</rss>